(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{571:function(t,e,s){"use strict";s.r(e);var a=s(43),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"appsflyer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#appsflyer"}},[t._v("#")]),t._v(" AppsFlyer")]),t._v(" "),s("h2",{attrs:{id:"插件支持的平台"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件支持的平台"}},[t._v("#")]),t._v(" 插件支持的平台")]),t._v(" "),s("ul",[s("li",[t._v("Android")]),t._v(" "),s("li",[t._v("iOS")])]),t._v(" "),s("h2",{attrs:{id:"api-列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-列表"}},[t._v("#")]),t._v(" API 列表")]),t._v(" "),s("h3",{attrs:{id:"init"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#init"}},[t._v("#")]),t._v(" init")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"初始化AppsFlyer",cpp:"static void init()",js:"void sdkbox.bb.bridge.init()",lua:"void sdkbox.bb.bridge.init()"}})],1),t._v(" "),s("h3",{attrs:{id:"setlistener"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setlistener"}},[t._v("#")]),t._v(" setListener")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"",cpp:"static void setListener(const std::function<void(const std::string& evt, const std::string& json)>& listener)",js:"void sdkbox.bb.bridge.setListener(l)",lua:"void sdkbox.bb.bridge.setListener(l)"}})],1),t._v(" "),s("h3",{attrs:{id:"setdevkey"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setdevkey"}},[t._v("#")]),t._v(" setDevKey")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"",cpp:"static void setDevKey(const std::string& devKey)",js:"void sdkbox.bb.bridge.setDevKey(devKey)",lua:"void sdkbox.bb.bridge.setDevKey(devKey)"}})],1),t._v(" "),s("h3",{attrs:{id:"setdebug"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setdebug"}},[t._v("#")]),t._v(" setDebug")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("参数")]),t._v(" "),s("th",[t._v("属性")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("b")]),t._v(" "),s("td",[t._v("bool")])])])]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"",cpp:"static void setDebug(bool b)",js:"void sdkbox.bb.bridge.setDebug(b)",lua:"void sdkbox.bb.bridge.setDebug(b)"}})],1),t._v(" "),s("h3",{attrs:{id:"setadditionaldata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setadditionaldata"}},[t._v("#")]),t._v(" setAdditionalData")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"",cpp:"static void setAdditionalData(const std::string& json)",js:"void sdkbox.bb.bridge.setAdditionalData(json)",lua:"void sdkbox.bb.bridge.setAdditionalData(json)"}})],1),t._v(" "),s("h3",{attrs:{id:"getappsflyeruid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getappsflyeruid"}},[t._v("#")]),t._v(" getAppsFlyerUID")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"",cpp:"static void getAppsFlyerUID(const std::function<void(const std::string& appsflyerID)>& cb)",js:"void sdkbox.bb.bridge.getAppsFlyerUID(cb)",lua:"void sdkbox.bb.bridge.getAppsFlyerUID(cb)"}})],1),t._v(" "),s("h3",{attrs:{id:"setcustomeruserid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setcustomeruserid"}},[t._v("#")]),t._v(" setCustomerUserID")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"",cpp:"static void setCustomerUserID(const std::string& userID)",js:"void sdkbox.bb.bridge.setCustomerUserID(userID)",lua:"void sdkbox.bb.bridge.setCustomerUserID(userID)"}})],1),t._v(" "),s("h3",{attrs:{id:"anonymizeuser"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#anonymizeuser"}},[t._v("#")]),t._v(" anonymizeUser")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"Anonymize a user's installs, events, and sessions.",cpp:"static void anonymizeUser(bool b)",js:"void sdkbox.bb.bridge.anonymizeUser(b)",lua:"void sdkbox.bb.bridge.anonymizeUser(b)"}})],1),t._v(" "),s("h3",{attrs:{id:"collectasa"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collectasa"}},[t._v("#")]),t._v(" collectASA")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"/*\n  * Starting SDK version 4.8.11, AppsFlyer SDK dynamically loads the Apple iAd.framework. This framework is required to record and measure the performance of Apple Search Ads in your app. If you don't want AppsFlyer to dynamically load this framework, set this property to false.\n    *\n    * Platfrom: [iOS]\n    */",cpp:"static void collectASA(bool b)",js:"void sdkbox.bb.bridge.collectASA(b)",lua:"void sdkbox.bb.bridge.collectASA(b)"}})],1),t._v(" "),s("h3",{attrs:{id:"waitforattuserauthorizationwithtimeoutinterval"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#waitforattuserauthorizationwithtimeoutinterval"}},[t._v("#")]),t._v(" waitForATTUserAuthorizationWithTimeoutInterval")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"/*\n * Used if you want to request user authorization via a popup before accessing app-related data for recording the user or the device (for example, IDFA). If the user opts-in, the IDFA will be passed to the SDK. The timeout interval gives the user a set amount of time to opt-in to IDFA collection. After the timer expires, the IDFA is not collected.\n *\n * Platfrom: [iOS]\n */",cpp:"static void waitForATTUserAuthorizationWithTimeoutInterval(int seconds)",js:"void sdkbox.bb.bridge.waitForATTUserAuthorizationWithTimeoutInterval(seconds)",lua:"void sdkbox.bb.bridge.waitForATTUserAuthorizationWithTimeoutInterval(seconds)"}})],1),t._v(" "),s("h3",{attrs:{id:"stop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stop"}},[t._v("#")]),t._v(" stop")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"",cpp:"static void stop()",js:"void sdkbox.bb.bridge.stop()",lua:"void sdkbox.bb.bridge.stop()"}})],1),t._v(" "),s("h3",{attrs:{id:"start"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#start"}},[t._v("#")]),t._v(" start")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"",cpp:"static void start()",js:"void sdkbox.bb.bridge.start()",lua:"void sdkbox.bb.bridge.start()"}})],1),t._v(" "),s("h3",{attrs:{id:"logevent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logevent"}},[t._v("#")]),t._v(" logEvent")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"",cpp:"static void logEvent(const std::string& evt, const std::string& json)",js:"void sdkbox.bb.bridge.logEvent(evt, json)",lua:"void sdkbox.bb.bridge.logEvent(evt, json)"}})],1),t._v(" "),s("h3",{attrs:{id:"usereceiptvalidationsandbox"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usereceiptvalidationsandbox"}},[t._v("#")]),t._v(" useReceiptValidationSandbox")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"/*\n * When testing purchase validation in the Sandbox environment, set true\n *\n * Platform: iOS\n */",cpp:"static void useReceiptValidationSandbox(bool b)",js:"void sdkbox.bb.bridge.useReceiptValidationSandbox(b)",lua:"void sdkbox.bb.bridge.useReceiptValidationSandbox(b)"}})],1),t._v(" "),s("h3",{attrs:{id:"validateandloginapppurchase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#validateandloginapppurchase"}},[t._v("#")]),t._v(" validateAndLogInAppPurchase")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:'/*\n* validateAndLogInAppPurchase param need a json string, like follow sample.\n*\n* Android Params Sample:\n* {\n    "publicKey": "xxx",\n    "signature": "xxx",\n    "purchaseData": "xxx",\n    "price": "xxx",\n    "currency": "xxx",\n    "parameters": {\n        "k1": "v1",\n        "k2": "v2"\n    }\n}\n*\n* iOS Params Sample:\n* {\n    "productIdentifier": "xxx",\n    "transactionId": "xxx",\n    "price": "xxx",\n    "currency": "xxx",\n    "parameters": {\n        "k1": "v1",\n        "k2": "v2"\n    }\n* }\n*\n*/',cpp:"static void validateAndLogInAppPurchase(const std::string& purchaseJson)",js:"void sdkbox.bb.bridge.validateAndLogInAppPurchase(purchaseJson)",lua:"void sdkbox.bb.bridge.validateAndLogInAppPurchase(purchaseJson)"}})],1),t._v(" "),s("h3",{attrs:{id:"setmintimebetweensessions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setmintimebetweensessions"}},[t._v("#")]),t._v(" setMinTimeBetweenSessions")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"",cpp:"static void setMinTimeBetweenSessions(int seconds)",js:"void sdkbox.bb.bridge.setMinTimeBetweenSessions(seconds)",lua:"void sdkbox.bb.bridge.setMinTimeBetweenSessions(seconds)"}})],1),t._v(" "),s("h3",{attrs:{id:"setresolvedeeplinkurls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setresolvedeeplinkurls"}},[t._v("#")]),t._v(" setResolveDeepLinkURLs")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"",cpp:"static void setResolveDeepLinkURLs(const std::vector<std::string>& urls)",js:"void sdkbox.bb.bridge.setResolveDeepLinkURLs(urls)",lua:"void sdkbox.bb.bridge.setResolveDeepLinkURLs(urls)"}})],1),t._v(" "),s("h3",{attrs:{id:"setimeidata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setimeidata"}},[t._v("#")]),t._v(" setImeiData")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"/*\n * Platfrom: [Android]\n */",cpp:"static void setImeiData(const std::string& data)",js:"void sdkbox.bb.bridge.setImeiData(data)",lua:"void sdkbox.bb.bridge.setImeiData(data)"}})],1),t._v(" "),s("h3",{attrs:{id:"setandroididdata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setandroididdata"}},[t._v("#")]),t._v(" setAndroidIdData")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"/*\n * Send Android ID to AppsFlyer\n * Platfrom: [Android]\n */",cpp:"sstatic void setAndroidIdData(const std::string& data)",js:"void sdkbox.bb.bridge.setAndroidIdData(data)",lua:"void sdkbox.bb.bridge.setAndroidIdData(data)"}})],1),t._v(" "),s("h3",{attrs:{id:"setcollectimei"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setcollectimei"}},[t._v("#")]),t._v(" setCollectIMEI")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"/*\n * Platfrom: [Android]\n */",cpp:"static void setCollectIMEI(bool b)",js:"void sdkbox.bb.bridge.setCollectIMEI(b)",lua:"void sdkbox.bb.bridge.setCollectIMEI(b)"}})],1),t._v(" "),s("h3",{attrs:{id:"setcollectandroidid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setcollectandroidid"}},[t._v("#")]),t._v(" setCollectAndroidID")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"/*\n * Send Android ID to AppsFlyer\n * Platfrom: [Android]\n */",cpp:"static void setCollectAndroidID(bool b)",js:"void sdkbox.bb.bridge.setCollectAndroidID(b)",lua:"void sdkbox.bb.bridge.setCollectAndroidID(b)"}})],1),t._v(" "),s("h3",{attrs:{id:"setcollectoaid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setcollectoaid"}},[t._v("#")]),t._v(" setCollectOaid")]),t._v(" "),s("ClientOnly",[s("ShowAPI",{attrs:{desc:"/*\n * Platfrom: [Android]\n */",cpp:"static void setCollectOaid(bool b)",js:"void sdkbox.bb.bridge.setCollectOaid(b)",lua:"void sdkbox.bb.bridge.setCollectOaid(b)"}})],1),t._v(" "),s("h2",{attrs:{id:"仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#仓库"}},[t._v("#")]),t._v(" 仓库")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/hugohuang1111/sdkbox-plugin-appsflyer/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PluginSample"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用"}},[t._v("#")]),t._v(" 引用")]),t._v(" "),s("ul",[s("li",[t._v("AppsFlyer 官方文档 "),s("a",{attrs:{href:"https://support.appsflyer.com/hc/en-us/articles/207032126-AppsFlyer-SDK-Integration-Android#api-reference",target:"_blank",rel:"noopener noreferrer"}},[t._v("Android API"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("AppsFlyer 官方文档 "),s("a",{attrs:{href:"https://support.appsflyer.com/hc/en-us/articles/207032066-iOS-SDK-V6-X-integration-guide-for-developers#api-reference",target:"_blank",rel:"noopener noreferrer"}},[t._v("iOS API"),s("OutboundLink")],1)])])],1)}),[],!1,null,null,null);e.default=i.exports}}]);